# Creating a new database
create database zepto;
use zepto;

# Creating tables
-- 1. USER TABLE
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    FullName VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    PhoneNumber VARCHAR(15),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);
-- 2. Addresses Table
CREATE TABLE Addresses (
    AddressID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    AddressLine VARCHAR(255),
    City VARCHAR(50),
    State VARCHAR(50),
    Pincode VARCHAR(10),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
-- 3. Vendors Table
CREATE TABLE Vendors (
    VendorID INT AUTO_INCREMENT PRIMARY KEY,
    VendorName VARCHAR(100),
    ContactEmail VARCHAR(100),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 4. ProductCategories Table
CREATE TABLE ProductCategories (
    CategoryID INT AUTO_INCREMENT PRIMARY KEY,
    CategoryName VARCHAR(100) NOT NULL
);

-- 5. Products Table
CREATE TABLE Products (
    ProductID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Description VARCHAR(255),
    CategoryID INT,
    Price DECIMAL(10,2),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CategoryID) REFERENCES ProductCategories(CategoryID)
);

-- 6. Inventory Table
CREATE TABLE Inventory (
    InventoryID INT AUTO_INCREMENT PRIMARY KEY,
    VendorID INT,
    ProductID INT,
    QuantityAvailable INT,
    LastUpdated DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- 7. Orders Table
CREATE TABLE Orders (
    OrderID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    VendorID INT,
    OrderDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    TotalAmount DECIMAL(10,2),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID)
);

-- 8. OrderItems Table
CREATE TABLE OrderItems (
    OrderItemID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    Price DECIMAL(10,2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);


-- 9. Payments Table
CREATE TABLE Payments (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT,
    PaymentMode VARCHAR(50),
    PaymentStatus VARCHAR(50),
    PaidAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);


-- 10. DeliveryPartners Table
CREATE TABLE DeliveryPartners (
    PartnerID INT AUTO_INCREMENT PRIMARY KEY,
    FullName VARCHAR(100),
    PhoneNumber VARCHAR(15)
);


-- 11. Status Table
CREATE TABLE Status (
    StatusID INT AUTO_INCREMENT PRIMARY KEY,
    StatusName VARCHAR(50)
);

-- 12. DeliveryStatus Table
CREATE TABLE DeliveryStatus (
    DeliveryID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT,
    StatusID INT,
    UpdatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (StatusID) REFERENCES Status(StatusID)
);

-- 13. Reviews Table
CREATE TABLE Reviews (
    ReviewID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    ProductID INT,
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Comment VARCHAR(255),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

show tables;
-- Users
INSERT INTO Users (FullName, Email, PhoneNumber) VALUES
('Ananya Mehta', 'ananya@example.com', '9876543210'),
('Ravi Kumar', 'ravi@example.com', '9123456780'),
('Meera Shah', 'meera@example.com', '9321456780'),
('Aditya Jain', 'aditya@example.com', '9887654321'),
('Priya Singh', 'priya@example.com', '9988776655'),
('Rahul Verma', 'rahul@example.com', '9765432109'),
('Ishita Rao', 'ishita@example.com', '9845612370'),
('Kunal Patel', 'kunal@example.com', '9687456231'),
('Sneha Kapoor', 'sneha@example.com', '9786543214'),
('Arjun Nair', 'arjun@example.com', '9678452310');

select * from Users;

-- Addresses
INSERT INTO Addresses (UserID, AddressLine, City, State, Pincode) VALUES
(2, 'Address 1', 'City 1', 'State 1', '40001'),
(3, 'Address 2', 'City 2', 'State 2', '40002'),
(4, 'Address 3', 'City 3', 'State 3', '40003'),
(5, 'Address 4', 'City 4', 'State 4', '40004'),
(6, 'Address 5', 'City 5', 'State 5', '40005'),
(7, 'Address 6', 'City 6', 'State 6', '40006'),
(8, 'Address 7', 'City 7', 'State 7', '40007'),
(9, 'Address 8', 'City 8', 'State 8', '40008'),
(10, 'Address 9', 'City 9', 'State 9', '40009'),
(1, 'Address 10', 'City 10', 'State 10', '400010'),
(2, 'Address 11', 'City 11', 'State 11', '400011'),
(3, 'Address 12', 'City 12', 'State 12', '400012'),
(4, 'Address 13', 'City 13', 'State 13', '400013'),
(5, 'Address 14', 'City 14', 'State 14', '400014'),
(6, 'Address 15', 'City 15', 'State 15', '400015'),
(7, 'Address 16', 'City 16', 'State 16', '400016'),
(8, 'Address 17', 'City 17', 'State 17', '400017'),
(9, 'Address 18', 'City 18', 'State 18', '400018'),
(10, 'Address 19', 'City 19', 'State 19', '400019'),
(1, 'Address 20', 'City 20', 'State 20', '400020');

select * from addresses;

-- Vendors
INSERT INTO Vendors (VendorName, ContactEmail) VALUES
('FreshMart', 'contact@freshmart.com'),
('DailyGroceries', 'support@dailygroceries.com'),
('GreenBasket', 'hello@greenbasket.com'),
('QuickBuy', 'sales@quickbuy.com'),
('HyperLocalHub', 'help@hyperlocalhub.com');

select * from Vendors;

-- Product Categories
INSERT INTO ProductCategories (CategoryName) VALUES
('Fruits & Vegetables'),
('Dairy'),
('Bakery'),
('Snacks'),
('Beverages');

select * from ProductCategories;

INSERT INTO Products (Name, Description, CategoryID, Price) VALUES
('Product 1', 'Description for product 1', 2, 15.00),
('Product 2', 'Description for product 2', 3, 20.00),
('Product 3', 'Description for product 3', 4, 25.00),
('Product 4', 'Description for product 4', 5, 30.00),
('Product 5', 'Description for product 5', 1, 35.00),
('Product 6', 'Description for product 6', 2, 40.00),
('Product 7', 'Description for product 7', 3, 45.00),
('Product 8', 'Description for product 8', 4, 50.00),
('Product 9', 'Description for product 9', 5, 55.00),
('Product 10', 'Description for product 10', 1, 10.00),
('Product 11', 'Description for product 11', 2, 15.00),
('Product 12', 'Description for product 12', 3, 20.00),
('Product 13', 'Description for product 13', 4, 25.00),
('Product 14', 'Description for product 14', 5, 30.00),
('Product 15', 'Description for product 15', 1, 35.00),
('Product 16', 'Description for product 16', 2, 40.00),
('Product 17', 'Description for product 17', 3, 45.00),
('Product 18', 'Description for product 18', 4, 50.00),
('Product 19', 'Description for product 19', 5, 55.00),
('Product 20', 'Description for product 20', 1, 10.00),
('Product 21', 'Description for product 21', 2, 15.00),
('Product 22', 'Description for product 22', 3, 20.00),
('Product 23', 'Description for product 23', 4, 25.00),
('Product 24', 'Description for product 24', 5, 30.00),
('Product 25', 'Description for product 25', 1, 35.00),
('Product 26', 'Description for product 26', 2, 40.00),
('Product 27', 'Description for product 27', 3, 45.00),
('Product 28', 'Description for product 28', 4, 50.00),
('Product 29', 'Description for product 29', 5, 55.00),
('Product 30', 'Description for product 30', 1, 10.00),
('Product 31', 'Description for product 31', 2, 15.00),
('Product 32', 'Description for product 32', 3, 20.00),
('Product 33', 'Description for product 33', 4, 25.00),
('Product 34', 'Description for product 34', 5, 30.00),
('Product 35', 'Description for product 35', 1, 35.00),
('Product 36', 'Description for product 36', 2, 40.00),
('Product 37', 'Description for product 37', 3, 45.00),
('Product 38', 'Description for product 38', 4, 50.00),
('Product 39', 'Description for product 39', 5, 55.00),
('Product 40', 'Description for product 40', 1, 10.00),
('Product 41', 'Description for product 41', 2, 15.00),
('Product 42', 'Description for product 42', 3, 20.00),
('Product 43', 'Description for product 43', 4, 25.00),
('Product 44', 'Description for product 44', 5, 30.00),
('Product 45', 'Description for product 45', 1, 35.00),
('Product 46', 'Description for product 46', 2, 40.00),
('Product 47', 'Description for product 47', 3, 45.00),
('Product 48', 'Description for product 48', 4, 50.00),
('Product 49', 'Description for product 49', 5, 55.00),
('Product 50', 'Description for product 50', 1, 10.00);

select * from Products;

INSERT INTO Inventory (VendorID, ProductID, QuantityAvailable) VALUES
(2, 1, 51),
(3, 2, 52),
(4, 3, 53),
(5, 4, 54),
(1, 5, 55),
(2, 6, 56),
(3, 7, 57),
(4, 8, 58),
(5, 9, 59),
(1, 10, 60),
(2, 11, 61),
(3, 12, 62),
(4, 13, 63),
(5, 14, 64),
(1, 15, 65),
(2, 16, 66),
(3, 17, 67),
(4, 18, 68),
(5, 19, 69),
(1, 20, 50),
(2, 21, 51),
(3, 22, 52),
(4, 23, 53),
(5, 24, 54),
(1, 25, 55),
(2, 26, 56),
(3, 27, 57),
(4, 28, 58),
(5, 29, 59),
(1, 30, 60),
(2, 31, 61),
(3, 32, 62),
(4, 33, 63),
(5, 34, 64),
(1, 35, 65),
(2, 36, 66),
(3, 37, 67),
(4, 38, 68),
(5, 39, 69),
(1, 40, 50),
(2, 41, 51),
(3, 42, 52),
(4, 43, 53),
(5, 44, 54),
(1, 45, 55),
(2, 46, 56),
(3, 47, 57),
(4, 48, 58),
(5, 49, 59),
(1, 50, 60);

select * from Inventory;

INSERT INTO Orders (UserID, VendorID, OrderDate, TotalAmount) VALUES 
(2,	2,	NOW(),	110.00),
(3,	3,	NOW(),	120.00),
(4,	4,	NOW(),	130.00),
(5,	5,	NOW(),	140.00),
(6,	1,	NOW(),	150.00),
(7,	2,	NOW(),	160.00),
(8,	3,	NOW(),	170.00),
(9,	4,	NOW(),	180.00),
(10	, 5	, NOW()	, 190.00),
(1,	1,	NOW(),	200.00),
(2,	2,	NOW(),	210.00),
(3,	3,	NOW(),	220.00),
(4,	4,	NOW(),	230.00),
(5,	5,	NOW(),	240.00),
(6,	1,	NOW(),	250.00),
(7,	2,	NOW(),	260.00),
(8,	3,	NOW(),	270.00),
(9,	4,	NOW(),	280.00),
(10	, 5	, NOW()	, 290.00),
(1,	1,	NOW(),	100.00),
(2,	2,	NOW(),	110.00),
(3,	3,	NOW(),	120.00),
(4,	4,	NOW(),	130.00),
(5,	5,	NOW(),	140.00),
(6,	1,	NOW(),	150.00),
(7,	2,	NOW(),	160.00),
(8,	3,	NOW(),	170.00),
(9,	4,	NOW(),	180.00),
(10	, 5	, NOW()	, 190.00),
(1,	1,	NOW(),	200.00),
(2,	2,	NOW(),	210.00),
(3,	3,	NOW(),	220.00),
(4,	4,	NOW(),	230.00),
(5,	5,	NOW(),	240.00),
(6,	1,	NOW(),	250.00),
(7,	2,	NOW(),	260.00),
(8,	3,	NOW(),	270.00),
(9,	4,	NOW(),	280.00),
(10	, 5	, NOW()	, 290.00),
(1,	1,	NOW(),	100.00),
(2,	2,	NOW(),	110.00),
(3,	3,	NOW(),	120.00),
(4,	4,	NOW(),	130.00),
(5,	5,	NOW(),	140.00),
(6,	1,	NOW(),	150.00),
(7,	2,	NOW(),	160.00),
(8,	3,	NOW(),	170.00),
(9,	4,	NOW(),	180.00),
(10	, 5	, NOW()	, 190.00),
(1,	1,	NOW(),	200.00),
(2,	2,	NOW(),	210.00),
(3,	3,	NOW(),	220.00),
(4,	4,	NOW(),	230.00),
(5,	5,	NOW(),	240.00),
(6,	1,	NOW(),	250.00),
(7,	2,	NOW(),	260.00),
(8,	3,	NOW(),	270.00),
(9,	4,	NOW(),	280.00),
(10	, 5	, NOW()	, 290.00),
(1,	1,	NOW(),	100.00),
(2,	2,	NOW(),	110.00),
(3,	3,	NOW(),	120.00),
(4,	4,	NOW(),	130.00),
(5,	5,	NOW(),	140.00),
(6,	1,	NOW(),	150.00),
(7,	2,	NOW(),	160.00),
(8,	3,	NOW(),	170.00),
(9,	4,	NOW(),	180.00),
(10	, 5	, NOW()	, 190.00),
(1,	1,	NOW(),	200.00),
(2,	2,	NOW(),	210.00),
(3,	3,	NOW(),	220.00),
(4,	4,	NOW(),	230.00),
(5,	5,	NOW(),	240.00),
(6,	1,	NOW(),	250.00),
(7,	2,	NOW(),	260.00),
(8,	3,	NOW(),	270.00),
(9,	4,	NOW(),	280.00),
(10	, 5	, NOW()	, 290.00),
(1,	1,	NOW(),	100.00),
(2,	2,	NOW(),	110.00),
(3,	3,	NOW(),	120.00),
(4,	4,	NOW(),	130.00),
(5,	5,	NOW(),	140.00),
(6,	1,	NOW(),	150.00),
(7,	2,	NOW(),	160.00),
(8,	3,	NOW(),	170.00),
(9,	4,	NOW(),	180.00),
(10	, 5	, NOW()	, 190.00),
(1,	1,	NOW(),	200.00),
(2,	2,	NOW(),	210.00),
(3,	3,	NOW(),	220.00),
(4,	4,	NOW(),	230.00),
(5,	5,	NOW(),	240.00),
(6,	1,	NOW(),	250.00),
(7,	2,	NOW(),	260.00),
(8,	3,	NOW(),	270.00),
(9,	4,	NOW(),	280.00),
(10	, 5	, NOW()	, 290.00),
(1,	1,	NOW(),	100.00);

select * from Orders;

INSERT INTO OrderItems (OrderID, ProductID, Quantity, Price) VALUES 
(2,	2, 2, 15.00),
(3,	3, 3, 20.00),
(4,	4, 1, 25.00),
(5,	5, 2, 30.00),
(6,	6, 3, 35.00),
(7,	7, 1, 40.00),
(8,	8, 2, 45.00),
(9,	9, 3, 50.00),
(10,	10, 1, 55.00),
(11,	11, 2, 10.00),
(12,	12, 3, 15.00),
(13,	13, 1, 20.00),
(14,	14, 2, 25.00),
(15,	15, 3, 30.00),
(16,	16, 1, 35.00),
(17,	17, 2, 40.00),
(18,	18, 3, 45.00),
(19,	19, 1, 50.00),
(20,	20, 2, 55.00),
(21,	21, 3, 10.00),
(22,	22, 1, 15.00),
(23,	23, 2, 20.00),
(24,	24, 3, 25.00),
(25,	25, 1, 30.00),
(26,	26, 2, 35.00),
(27,	27, 3, 40.00),
(28,	28, 1, 45.00),
(29,	29, 2, 50.00),
(30,	30, 3, 55.00),
(31,	31, 1, 10.00),
(32,	32, 2, 15.00),
(33,	33, 3, 20.00),
(34,	34, 1, 25.00),
(35,	35, 2, 30.00),
(36,	36, 3, 35.00),
(37,	37, 1, 40.00),
(38,	38, 2, 45.00),
(39,	39, 3, 50.00),
(40,	40, 1, 55.00),
(41,	41, 2, 10.00),
(42,	42, 3, 15.00),
(43,	43, 1, 20.00),
(44,	44, 2, 25.00),
(45,	45, 3, 30.00),
(46,	46, 1, 35.00),
(47,	47, 2, 40.00),
(48,	48, 3, 45.00),
(49,	49, 1, 50.00),
(50,	50, 2, 55.00),
(51,	1, 3, 10.00),
(52,	2, 1, 15.00),
(53,	3, 2, 20.00),
(54,	4, 3, 25.00),
(55,	5, 1, 30.00),
(56,	6, 2, 35.00),
(57,	7, 3, 40.00),
(58,	8, 1, 45.00),
(59,	9, 2, 50.00),
(60,	10, 3, 55.00),
(61,	11, 1, 10.00),
(62,	12, 2, 15.00),
(63,	13, 3, 20.00),
(64,	14, 1, 25.00),
(65,	15, 2, 30.00),
(66,	16, 3, 35.00),
(67,	17, 1, 40.00),
(68,	18, 2, 45.00),
(69,	19, 3, 50.00),
(70,	20, 1, 55.00),
(71,	21, 2, 10.00),
(72,	22, 3, 15.00),
(73,	23, 1, 20.00),
(74,	24, 2, 25.00),
(75,	25, 3, 30.00),
(76,	26, 1, 35.00),
(77,	27, 2, 40.00),
(78,	28, 3, 45.00),
(79,	29, 1, 50.00),
(80,	30, 2, 55.00),
(81,	31, 3, 10.00),
(82,	32, 1, 15.00),
(83,	33, 2, 20.00),
(84,	34, 3, 25.00),
(85,	35, 1, 30.00),
(86,	36, 2, 35.00),
(87,	37, 3, 40.00),
(88,	38, 1, 45.00),
(89,	39, 2, 50.00),
(90,	40, 3, 55.00),
(91,	41, 1, 10.00),
(92,	42, 2, 15.00),
(93,	43, 3, 20.00),
(94,	44, 1, 25.00),
(95,	45, 2, 30.00),
(96,	46, 3, 35.00),
(97,	47, 1, 40.00),
(98,	48, 2, 45.00),
(99,	49, 3, 50.00),
(100	, 50, 1, 55.00),
(1,	1, 2, 10.00),
(2,	2, 3, 15.00),
(3,	3, 1, 20.00),
(4,	4, 2, 25.00),
(5,	5, 3, 30.00),
(6,	6, 1, 35.00),
(7,	7, 2, 40.00),
(8,	8, 3, 45.00),
(9,	9, 1, 50.00),
(10,	10, 2, 55.00),
(11,	11, 3, 10.00),
(12,	12, 1, 15.00),
(13,	13, 2, 20.00),
(14,	14, 3, 25.00),
(15,	15, 1, 30.00),
(16,	16, 2, 35.00),
(17,	17, 3, 40.00),
(18,	18, 1, 45.00),
(19,	19, 2, 50.00),
(20,	20, 3, 55.00),
(21,	21, 1, 10.00),
(22,	22, 2, 15.00),
(23,	23, 3, 20.00),
(24,	24, 1, 25.00),
(25,	25, 2, 30.00),
(26,	26, 3, 35.00),
(27,	27, 1, 40.00),
(28,	28, 2, 45.00),
(29,	29, 3, 50.00),
(30,	30, 1, 55.00),
(31,	31, 2, 10.00),
(32,	32, 3, 15.00),
(33,	33, 1, 20.00),
(34,	34, 2, 25.00),
(35,	35, 3, 30.00),
(36,	36, 1, 35.00),
(37,	37, 2, 40.00),
(38,	38, 3, 45.00),
(39,	39, 1, 50.00),
(40,	40, 2, 55.00),
(41,	41, 3, 10.00),
(42,	42, 1, 15.00),
(43,	43, 2, 20.00),
(44,	44, 3, 25.00),
(45,	45, 1, 30.00),
(46,	46, 2, 35.00),
(47,	47, 3, 40.00),
(48,	48, 1, 45.00),
(49,	49, 2, 50.00),
(50,	50, 3, 55.00),
(51,	1, 1, 10.00),
(52,	2, 2, 15.00),
(53,	3, 3, 20.00),
(54,	4, 1, 25.00),
(55,	5, 2, 30.00),
(56,	6, 3, 35.00),
(57,	7, 1, 40.00),
(58,	8, 2, 45.00),
(59,	9, 3, 50.00),
(60,	10, 1, 55.00),
(61,	11, 2, 10.00),
(62,	12, 3, 15.00),
(63,	13, 1, 20.00),
(64,	14, 2, 25.00),
(65,	15, 3, 30.00),
(66,	16, 1, 35.00),
(67,	17, 2, 40.00),
(68,	18, 3, 45.00),
(69,	19, 1, 50.00),
(70,	20, 2, 55.00),
(71,	21, 3, 10.00),
(72,	22, 1, 15.00),
(73,	23, 2, 20.00),
(74,	24, 3, 25.00),
(75,	25, 1, 30.00),
(76,	26, 2, 35.00),
(77,	27, 3, 40.00),
(78,	28, 1, 45.00),
(79,	29, 2, 50.00),
(80,	30, 3, 55.00),
(81,	31, 1, 10.00),
(82,	32, 2, 15.00),
(83,	33, 3, 20.00),
(84,	34, 1, 25.00),
(85,	35, 2, 30.00),
(86,	36, 3, 35.00),
(87,	37, 1, 40.00),
(88,	38, 2, 45.00),
(89,	39, 3, 50.00),
(90,	40, 1, 55.00),
(91,	41, 2, 10.00),
(92,	42, 3, 15.00),
(93,	43, 1, 20.00),
(94,	44, 2, 25.00),
(95,	45, 3, 30.00),
(96,	46, 1, 35.00),
(97,	47, 2, 40.00),
(98,	48, 3, 45.00),
(99,	49, 1, 50.00),
(100	, 50, 2, 55.00),
(1,	1, 3, 10.00);

select * from OrderItems;

INSERT INTO Payments (OrderID, PaymentMode, PaymentStatus, PaidAt) VALUES
(1,	'UPI',	'Paid',	NOW()),
(2,	'UPI',	'Paid',	NOW()),
(3,	'UPI',	'Paid',	NOW()),
(4,	'UPI',	'Paid',	NOW()),
(5,	'UPI',	'Paid',	NOW()),
(6,	'UPI',	'Paid',	NOW()),
(7,	'UPI',	'Paid',	NOW()),
(8,	'UPI',	'Paid',	NOW()),
(9,	'UPI',	'Paid',	NOW()),
(10,	'UPI',	'Paid',	NOW()),
(11,	'UPI',	'Paid',	NOW()),
(12,	'UPI',	'Paid',	NOW()),
(13,	'UPI',	'Paid',	NOW()),
(14,	'UPI',	'Paid',	NOW()),
(15,	'UPI',	'Paid',	NOW()),
(16,	'UPI',	'Paid',	NOW()),
(17,	'UPI',	'Paid',	NOW()),
(18,	'UPI',	'Paid',	NOW()),
(19,	'UPI',	'Paid',	NOW()),
(20,	'UPI',	'Paid',	NOW()),
(21,	'UPI',	'Paid',	NOW()),
(22,	'UPI',	'Paid',	NOW()),
(23,	'UPI',	'Paid',	NOW()),
(24,	'UPI',	'Paid',	NOW()),
(25,	'UPI',	'Paid',	NOW()),
(26,	'UPI',	'Paid',	NOW()),
(27,	'UPI',	'Paid',	NOW()),
(28,	'UPI',	'Paid',	NOW()),
(29,	'UPI',	'Paid',	NOW()),
(30,	'UPI',	'Paid',	NOW()),
(31,	'UPI',	'Paid',	NOW()),
(32,	'UPI',	'Paid',	NOW()),
(33,	'UPI',	'Paid',	NOW()),
(34,	'UPI',	'Paid',	NOW()),
(35,	'UPI',	'Paid',	NOW()),
(36,	'UPI',	'Paid',	NOW()),
(37,	'UPI',	'Paid',	NOW()),
(38,	'UPI',	'Paid',	NOW()),
(39,	'UPI',	'Paid',	NOW()),
(40,	'UPI',	'Paid',	NOW()),
(41,	'UPI',	'Paid',	NOW()),
(42,	'UPI',	'Paid',	NOW()),
(43,	'UPI',	'Paid',	NOW()),
(44,	'UPI',	'Paid',	NOW()),
(45,	'UPI',	'Paid',	NOW()),
(46,	'UPI',	'Paid',	NOW()),
(47,	'UPI',	'Paid',	NOW()),
(48,	'UPI',	'Paid',	NOW()),
(49,	'UPI',	'Paid',	NOW()),
(50,	'UPI',	'Paid',	NOW()),
(51,	'UPI',	'Paid',	NOW()),
(52,	'UPI',	'Paid',	NOW()),
(53,	'UPI',	'Paid',	NOW()),
(54,	'UPI',	'Paid',	NOW()),
(55,	'UPI',	'Paid',	NOW()),
(56,	'UPI',	'Paid',	NOW()),
(57,	'UPI',	'Paid',	NOW()),
(58,	'UPI',	'Paid',	NOW()),
(59,	'UPI',	'Paid',	NOW()),
(60,	'UPI',	'Paid',	NOW()),
(61,	'UPI',	'Paid',	NOW()),
(62,	'UPI',	'Paid',	NOW()),
(63,	'UPI',	'Paid',	NOW()),
(64,	'UPI',	'Paid',	NOW()),
(65,	'UPI',	'Paid',	NOW()),
(66,	'UPI',	'Paid',	NOW()),
(67,	'UPI',	'Paid',	NOW()),
(68,	'UPI',	'Paid',	NOW()),
(69,	'UPI',	'Paid',	NOW()),
(70,	'UPI',	'Paid',	NOW()),
(71,	'UPI',	'Paid',	NOW()),
(72,	'UPI',	'Paid',	NOW()),
(73,	'UPI',	'Paid',	NOW()),
(74,	'UPI',	'Paid',	NOW()),
(75,	'UPI',	'Paid',	NOW()),
(76,	'UPI',	'Paid',	NOW()),
(77,	'UPI',	'Paid',	NOW()),
(78,	'UPI',	'Paid',	NOW()),
(79,	'UPI',	'Paid',	NOW()),
(80,	'UPI',	'Paid',	NOW()),
(81,	'UPI',	'Paid',	NOW()),
(82,	'UPI',	'Paid',	NOW()),
(83,	'UPI',	'Paid',	NOW()),
(84,	'UPI',	'Paid',	NOW()),
(85,	'UPI',	'Paid',	NOW()),
(86,	'UPI',	'Paid',	NOW()),
(87,	'UPI',	'Paid',	NOW()),
(88,	'UPI',	'Paid',	NOW()),
(89,	'UPI',	'Paid',	NOW()),
(90,	'UPI',	'Paid',	NOW()),
(91,	'UPI',	'Paid',	NOW()),
(92,	'UPI',	'Paid',	NOW()),
(93,	'UPI',	'Paid',	NOW()),
(94,	'UPI',	'Paid',	NOW()),
(95,	'UPI',	'Paid',	NOW()),
(96,	'UPI',	'Paid',	NOW()),
(97,	'UPI',	'Paid',	NOW()),
(98,	'UPI',	'Paid',	NOW()),
(99,	'UPI',	'Paid',	NOW()),
(100	, 'UPI'	, 'Paid'	, NOW());

INSERT INTO DeliveryPartners (FullName, PhoneNumber) VALUES
('Aman Yadav', '9999999999'),
('Sushil Reddy', '8888888888'),
('Kiran Mehta', '7777777777'),
('Divya Patil', '5454545456'),
('Rohit Singh', '9876543210');

INSERT INTO Status (StatusName) VALUES
('Assigned'),
('Picked'),
('Out for Delivery'),
('Delivered'),
('Cancelled');

INSERT INTO DeliveryStatus (OrderID, StatusID, UpdatedAt) VALUES
(1,	2,	NOW()),
(2,	3,	NOW()),
(3,	4,	NOW()),
(4,	5,	NOW()),
(5,	1,	NOW()),
(6,	2,	NOW()),
(7,	3,	NOW()),
(8,	4,	NOW()),
(9,	5,	NOW()),
(10,	1,	NOW()),
(11,	2,	NOW()),
(12,	3,	NOW()),
(13,	4,	NOW()),
(14,	5,	NOW()),
(15,	1,	NOW()),
(16,	2,	NOW()),
(17,	3,	NOW()),
(18,	4,	NOW()),
(19,	5,	NOW()),
(20,	1,	NOW()),
(21,	2,	NOW()),
(22,	3,	NOW()),
(23,	4,	NOW()),
(24,	5,	NOW()),
(25,	1,	NOW()),
(26,	2,	NOW()),
(27,	3,	NOW()),
(28,	4,	NOW()),
(29,	5,	NOW()),
(30,	1,	NOW()),
(31,	2,	NOW()),
(32,	3,	NOW()),
(33,	4,	NOW()),
(34,	5,	NOW()),
(35,	1,	NOW()),
(36,	2,	NOW()),
(37,	3,	NOW()),
(38,	4,	NOW()),
(39,	5,	NOW()),
(40,	1,	NOW()),
(41,	2,	NOW()),
(42,	3,	NOW()),
(43,	4,	NOW()),
(44,	5,	NOW()),
(45,	1,	NOW()),
(46,	2,	NOW()),
(47,	3,	NOW()),
(48,	4,	NOW()),
(49,	5,	NOW()),
(50,	1,	NOW()),
(51,	2,	NOW()),
(52,	3,	NOW()),
(53,	4,	NOW()),
(54,	5,	NOW()),
(55,	1,	NOW()),
(56,	2,	NOW()),
(57,	3,	NOW()),
(58,	4,	NOW()),
(59,	5,	NOW()),
(60,	1,	NOW()),
(61,	2,	NOW()),
(62,	3,	NOW()),
(63,	4,	NOW()),
(64,	5,	NOW()),
(65,	1,	NOW()),
(66,	2,	NOW()),
(67,	3,	NOW()),
(68,	4,	NOW()),
(69,	5,	NOW()),
(70,	1,	NOW()),
(71,	2,	NOW()),
(72,	3,	NOW()),
(73,	4,	NOW()),
(74,	5,	NOW()),
(75,	1,	NOW()),
(76,	2,	NOW()),
(77,	3,	NOW()),
(78,	4,	NOW()),
(79,	5,	NOW()),
(80,	1,	NOW()),
(81,	2,	NOW()),
(82,	3,	NOW()),
(83,	4,	NOW()),
(84,	5,	NOW()),
(85,	1,	NOW()),
(86,	2,	NOW()),
(87,	3,	NOW()),
(88,	4,	NOW()),
(89,	5,	NOW()),
(90,	1,	NOW()),
(91,	2,	NOW()),
(92,	3,	NOW()),
(93,	4,	NOW()),
(94,	5,	NOW()),
(95,	1,	NOW()),
(96,	2,	NOW()),
(97,	3,	NOW()),
(98,	4,	NOW()),
(99,	5,	NOW()),
(100	, 1	, NOW());


INSERT INTO Reviews (UserID, ProductID, Rating, Comment) VALUES
(2,	2, 2, 'Review comment 1'),
(3,	3, 3, 'Review comment 2'),
(4,	4, 4, 'Review comment 3'),
(5,	5, 5, 'Review comment 4'),
(6,	6, 1, 'Review comment 5'),
(7,	7, 2, 'Review comment 6'),
(8,	8, 3, 'Review comment 7'),
(9,	9, 4, 'Review comment 8'),
(10	, 10, 5, 'Review comment 9'),
(1,	11, 1, 'Review comment 10'),
(2,	12, 2, 'Review comment 11'),
(3,	13, 3, 'Review comment 12'),
(4,	14, 4, 'Review comment 13'),
(5,	15, 5, 'Review comment 14'),
(6,	16, 1, 'Review comment 15'),
(7,	17, 2, 'Review comment 16'),
(8,	18, 3, 'Review comment 17'),
(9,	19, 4, 'Review comment 18'),
(10	, 20, 5, 'Review comment 19'),
(1,	21, 1, 'Review comment 20'),
(2,	22, 2, 'Review comment 21'),
(3,	23, 3, 'Review comment 22'),
(4,	24, 4, 'Review comment 23'),
(5,	25, 5, 'Review comment 24'),
(6,	26, 1, 'Review comment 25'),
(7,	27, 2, 'Review comment 26'),
(8,	28, 3, 'Review comment 27'),
(9,	29, 4, 'Review comment 28'),
(10	, 30, 5, 'Review comment 29'),
(1,	31, 1, 'Review comment 30');

# Queries

-- 1. Get All Orders by a User (Customer or Vendor)
SELECT o.OrderID, o.OrderDate, o.TotalAmount, o.UserID, u.FullName
FROM Orders o JOIN Users u
ON o.UserID = u.UserID WHERE o.UserID = 2;

-- Vendor Query
SELECT o.OrderID, o.OrderDate, o.TotalAmount, o.UserID, v.VendorName
FROM Orders o JOIN Vendors v
ON o.VendorID = v.VendorID WHERE o.VendorID = 2;

-- 2. Order Summary with Items (Orders, OrderItems, Products)
SELECT o.OrderID, p.Name, oi.Quantity, oi.Price
FROM Orders o JOIN OrderItems oi 
ON o.OrderID = oi.OrderID
JOIN Products p
ON p.ProductID = oi.ProductID;

-- 3. Total Revenue Generated by Each Vendor
SELECT v.VendorName AS 'Vendor Name', SUM(o.TotalAmount) as 'Total Revenue'
FROM Orders o JOIN Vendors v
ON o.VendorID = v.VendorID
GROUP BY v.VendorName
ORDER BY 'Total Revenue' DESC;

-- 4. Top 3 Most Ordered Products Per Category
with productordercounts as (
select p.ProductID,p.Name as ProductName,
pc.CategoryName, sum(oi.Quantity) as TotalOrdered,
dense_rank() over(partition by pc.CategoryName order by sum(oi.Quantity)desc) as rnk
from orderitems oi
join products p on p.ProductID=oi.ProductID
join productcategories pc on p.CategoryID=pc.CategoryID
group by ProductID, pc.CategoryName)
select * from productordercounts
where rnk<=3 ;

-- 5. Users With More Than 1 Order in the Last 30 Days



 




